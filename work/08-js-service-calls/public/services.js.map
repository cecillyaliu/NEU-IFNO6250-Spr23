{"version":3,"file":"services.js","mappings":"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","sources":["webpack://08-js-service-calls/webpack/bootstrap","webpack://08-js-service-calls/webpack/runtime/define property getters","webpack://08-js-service-calls/webpack/runtime/hasOwnProperty shorthand","webpack://08-js-service-calls/webpack/runtime/make namespace object","webpack://08-js-service-calls/./src/services.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// This is a sample file that demonstrates\n// how you can write an abstraction around\n// a fetch() call\n// This exported function returns a promise\n// that resolves with data\n// or rejects with an error object\n//\n// The caller of this function can decide\n// what to do with the data\n// or what to do with the error\n//\n// You can add to this file and use this function\n// or write your own files/functions\n\nexport function fetchLogin(username) {\n  return fetch('/api/session/', {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json', // set this header when sending JSON in the body of request\n    },\n    body: JSON.stringify( { username } ),\n  })\n  // fetch() rejects on network error\n  // So we convert that to a formatted error object\n  // so our caller can handle all \"errors\" in a similar way\n  .catch( err => Promise.reject({ error: 'network-error' }) )\n  .then( response => {\n    if(!response.ok) {  // response.ok checks the status code from the service\n      // This service returns JSON on errors,\n      // so we use that as the error object and reject\n      return response.json().then( err => Promise.reject(err) );\n    }\n    return response.json(); // happy status code means resolve with data from service\n  });\n}\n\nexport function getLogin(username) {\n  return fetch('/api/session/', {\n    method: 'GET',\n    headers: {\n      'content-type': 'application/json', // set this header when sending JSON in the body of request\n    }\n  })\n  // fetch() rejects on network error\n  // So we convert that to a formatted error object\n  // so our caller can handle all \"errors\" in a similar way\n  .catch( err => Promise.reject({ error: 'network-error' }) )\n  .then( response => {\n    if(!response.ok) {  // response.ok checks the status code from the service\n      // This service returns JSON on errors,\n      // so we use that as the error object and reject\n      return response.json().then( err => Promise.reject(err) );\n    }\n    return response.json(); // happy status code means resolve with data from service\n  });\n};\n\nexport function deleteSession() {\n  return fetch('/api/session/', {\n    method: 'DELETE',\n    headers: {\n      'content-type': 'application/json',\n    },\n  })\n  .catch( err => Promise.reject({ error: 'network-error' }) )\n  .then( response => {\n    if(!response.ok) {\n      return response.json().then( err => Promise.reject(err) );\n    }\n    return response.json();\n  });\n};\n\n\nexport function putWord(word) {\n  return fetch('/api/word/', {\n    method: 'PUT',\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify({\n      word: word\n    })\n  })\n  [\"catch\"](function (err) {\n    return Promise.reject({\n      error: 'network-error'\n    });\n  }).then(function (response) {\n    if (!response.ok) {\n      return response.json().then(function (err) {\n        return Promise.reject(err);\n      });\n    }\n    return response.json(); \n  });\n};\n\nexport function getWord() {\n  return fetch('/api/word/', {\n    method: 'GET',\n    headers: {\n      'content-type': 'application/json'\n    }\n  })\n\n  [\"catch\"](function (err) {\n    return Promise.reject({\n      error: 'network-error'\n    });\n  }).then(function (response) {\n    if (!response.ok) {\n      return response.json().then(function (err) {\n        return Promise.reject(err);\n      });\n    }\n    return response.json(); \n  });\n};\n\nexport function getWordByWordFor() {\n  const word = wordFor[loggedInUser];\n  const storedWord = word ? word : \"None\";\n  return Promise.resolve({ storedWord });\n}\n\n\nexport function loginStatusCheck() {\n  return getLogin()\n    .then((data) => {\n      // user is logged in if data.username exists\n      if (data.username) {\n        return true;\n      } else {\n        return false;\n      }\n    })\n    .catch((error) => {\n      // handle network error or any other error\n      return false;\n    });\n}\n"],"names":["fetchLogin","username","fetch","method","headers","body","JSON","stringify","err","Promise","reject","error","then","response","ok","json","getLogin","deleteSession","putWord","word","getWord","getWordByWordFor","wordFor","loggedInUser","storedWord","resolve","loginStatusCheck","data"],"sourceRoot":""}